#!/bin/sh

usage () {
cat << USAGE
  Usage: docker-save-image-to-archive [-i IMAGE] [-t TAG] [-o FILE] [-z COMPRESS_PROG] [-c] [-s] [-v] [-h]
  Description:
    Save docker image to compressed archive.
  Options:
    -i <image>
    -t <tag>
    -o <file> (default <image>-<tag>.tar.gz)
    -z <compressor> (pigz, or xz and so on)
    -c Output stdout
    -v Verbose mode
    -h This help text
USAGE
}

set -- $(getopt i:t:o:z:cvh "$@")
ret=$?

if [ $ret != 0 ]; then
  usage
  exit 1
fi

for OPT in "$@"
do
  case $OPT in
    -i)
      image=$2
      shift 2
      ;;
    -t)
      tag=$2
      shift 2
      ;;
    -o)
      file=$2
      shift 2
      ;;
    -z)
      compressor=$2
      shift 2
      ;;
    -c)
      stdout=1
      shift
      ;;
    -v)
      verbose=1
      shift
      ;;
    -h)
      usage
      exit 0
      ;;
    --)
      shift
      break
      ;;
  esac
done

if [ "x$image" = "x" ]; then
  usage
  exit 1
fi

if [ "x$tag" = "x" ]; then
  usage
  exit 1
fi

if [ "x$file" = "x" ]; then
  file="$image-$tag.tar.gz"
fi

if [ "x$compressor" = "x" ]; then
  if type pigz > /dev/null 2>&1; then
    compressor=pigz
  else
    compressor=gzip
  fi
fi

if type $compressor > /dev/null 2>&1; then
  true
else
  echo "$compressor: command not found."
  exit 1
fi

cmd="docker save $image:$tag"
compress="$compressor -c"

if [ "x$stdout" = "x1" ]; then
  eval "$cmd | $compress -f > /dev/stdout"
else
  if [ "x$verbose" = "x1" ]; then
    echo "image=$image, tag=$tag, file=$file compressor=$compressor"
  fi
  eval "$cmd | $compress > $file"
fi
